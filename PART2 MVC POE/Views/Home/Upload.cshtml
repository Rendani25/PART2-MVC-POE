@model UploadFileToDb.FileUploadViewModel.FileUploadViewModel; // Correctly reference the view model

@{
    ViewData["Title"] = "File Upload";
}

<h1>File Upload</h1>

<!-- File upload form -->
<form method="post" asp-action="Upload" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-6">
            <label asp-for="Upload" class="control-label"></label> <!-- Ensure UploadedFile is in the ViewModel -->
            <input type="file" asp-for="Upload" class="form-control" accept=".zip,.pdf,.jpg, .png, .jpeg" required />
            <span asp-validation-for="Upload" class="text-danger"></span> <!-- Validation message -->
        </div>
        <div class="col-md-6">
            <label asp-for="Description" class="control-label"></label>
            <input asp-for="Description" class="form-control" required />
            <span asp-validation-for="Description" class="text-danger"></span> <!-- Validation message -->
        </div>
        <div class="col-md-6">
            <input type="submit" class="btn btn-primary mt-2" value="Upload File" />
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial"); // Ensure this partial view exists
    }
}

<hr />

<!-- Display uploaded files or message if none -->
@if (Model.SystemFiles == null || !Model.SystemFiles.Any()) // Added null check
{
    <caption>There are no files in the database.</caption>
}
else
{
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.SystemFiles[0].Id)</th>
                <th>@Html.DisplayNameFor(model => model.SystemFiles[0].FileName)</th>
                <th>@Html.DisplayNameFor(model => model.SystemFiles[0].FileType)</th>
                <th>@Html.DisplayNameFor(model => model.SystemFiles[0].Description)</th>
                <th>@Html.DisplayNameFor(model => model.SystemFiles[0].CreatedOn)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var file in Model.SystemFiles)
            {
                <tr>
                    <td>@file.Id</td>
                    <td>@file.FileName</td>
                    <td>@file.FileType</td>
                    <td>@file.Description</td>
                    <td>@file.CreatedOn.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}
